{"version":3,"sources":["utils/GenGame.js","component/CustomCheckbox.js","component/Modal.js","App.js","index.js"],"names":["genAnswerGrid","result","i","arr","j","Math","floor","random","push","genGrid","answer","gridGame","length","row","CheckBox","className","type","id","this","props","value","name","checked","onChange","React","PureComponent","modalRoot","document","getElementById","Modal","element","createElement","appendChild","removeChild","createPortal","children","Component","sumRow","reduce","c","val","isTrue","ARRZERO","num","Array","fill","gen2DArray","CORRECT","border","color","INCORRECT","App","grid","state","history","handleChange","bind","reset","undo","newGame","rowSumAnswer","map","colSumAnswer","_","zip","event","target","col","Number","newArr","slice","arrRow","setState","pop","pastGrid","currentGrid","rowSumGrid","colSumGrid","rowBooleanArr","colBooleanArr","completed","every","key","style","onClick","disabled","ReactDOM","render"],"mappings":"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","file":"static/js/main.1526f811.chunk.js","sourcesContent":["export function genAnswerGrid() {\n\tconst result = [];\n\tfor (let i = 0; i < 5; i++) {\n\t\tlet arr = [];\n\t\tfor (let j = 0; j < 5; j++) {\n\t\t\tif (Math.floor(Math.random() * 10) > 5) {\n\t\t\t\tarr.push(Math.floor(Math.random() * 9));\n\t\t\t} else {\n\t\t\t\tarr.push(0)\n\t\t\t}\n\t\t}\n\t\tresult.push(arr);\n\t}\n\treturn result;\n}\n\nexport function genGrid(answer) {\n\tlet gridGame = [];\n\n\tfor (let i = 0; i < answer.length; i++) {\n\t\tlet row = [...answer[i]];\n\t\tfor (let j = 0; j < row.length; j++) {\n\t\t\tif (row[j] === 0) {\n\t\t\t\trow[j] = Math.floor(Math.random() * 9) + 1;\n\t\t\t}\n\t\t}\n\t\tgridGame.push(row);\n\t}\n\treturn gridGame;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport class CheckBox extends React.PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<label className=\"container\">\n\t\t\t\t<input type=\"checkbox\"\n\t\t\t\t\tid={'check_id' + this.props.value}\n\t\t\t\t\tname={this.props.name}\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tchecked={this.props.checked}\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t/>\n\t\t\t\t<span className=\"checkmark\">{this.props.value}</span>\n\t\t\t</label>\n\t\t)\n\t}\n}\n\nCheckBox.propTypes = {\n\tvalue : PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t\tPropTypes.element.isRequired,\n\t])\n}","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.getElementById('modal');\n\nexport class Modal extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.element = document.createElement('div');\n\t}\n\n\tcomponentDidMount() {\n\t\tmodalRoot.appendChild(this.element);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tmodalRoot.removeChild(this.element);\n\t}\n\n\trender() {\n\t\treturn createPortal(this.props.children, this.element)\n\t}\n\n}\n","import React from 'react';\nimport { genAnswerGrid, genGrid } from './utils/GenGame.js';\nimport { CheckBox } from './component/CustomCheckbox.js';\nimport { Modal } from './component/Modal.js';\nimport _ from 'underscore';\n\nimport './App.css';\n\nfunction sumRow(row) {\n  return row.reduce((c, val) => c += val)\n}\n\nfunction gen2DArray(num) {\n  let result = [];\n  for (let i=0; i<num; i++) {\n    result.push(Array(num).fill(0))\n  }\n  return result\n}\n\nconst isTrue = (value) => value === true;\n\nconst ARRZERO = gen2DArray(5);\n\nconst CORRECT = {border: \"1px solid yellow\", color: \"yellow\"}\nconst INCORRECT = {border: \"1px solid white\", color: \"white\"}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.answer = genAnswerGrid();\n\n    this.grid = genGrid(this.answer)\n\n    this.state = {history: [ARRZERO], grid: ARRZERO}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.reset = this.reset.bind(this);\n    this.undo = this.undo.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.rowSumAnswer = () => this.answer.map(sumRow);\n    this.colSumAnswer = () => _.zip(...this.answer).map(sumRow);\n  }\n\n  handleChange(event) {\n    let [row,col] = event.target.name; \n    row = Number(row);\n    col = Number(col);\n    const newArr = this.state.grid.slice();\n    let arrRow = newArr[row].slice();\n    arrRow[col] = event.target.checked ? Number(event.target.value) : 0;\n    newArr[row] = arrRow;\n\n    let history = this.state.history.slice();\n    history.push(newArr);\n\n    this.setState({grid: newArr, history: history})\n  }\n\n  reset(event) {\n    this.setState({history: [ARRZERO], grid: ARRZERO});\n  }\n\n  undo(event) {\n    let history = this.state.history.slice();\n    history.pop();\n    let pastGrid = history[history.length - 1];\n\n    this.setState({history: history, grid: pastGrid})\n  }\n\n  newGame() {\n    this.answer = genAnswerGrid();\n    this.grid = genGrid(this.answer);\n    this.setState({history: [ARRZERO], grid: ARRZERO})\n  }\n\n  render() {\n    const currentGrid = this.state.grid;\n    const rowSumAnswer = this.rowSumAnswer();\n    const colSumAnswer = this.colSumAnswer();\n    const rowSumGrid = currentGrid.map(sumRow);\n    const colSumGrid = _.zip(...currentGrid).map(sumRow);\n    const rowBooleanArr = rowSumAnswer.map((val, i) => val === rowSumGrid[i]);\n    const colBooleanArr = colSumAnswer.map((val, i) => val === colSumGrid[i]);\n    const completed = [...rowBooleanArr, ...colBooleanArr].every(isTrue);\n\n    return (\n      <div>\n        <div className=\"grid\">\n          {this.grid.map((row, i) =>\n            <div className=\"row\" key={'div' + i}>\n              {row.map((value, j) =>\n                <CheckBox\n                  key={`checkbox${i}${j}`} \n                  value={value} \n                  name={`${i}${j}`} \n                  onChange={this.handleChange} \n                  checked={this.state.grid[i][j] !== 0}/>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"row-answer\">\n            {rowSumAnswer.map((val, i) => \n              <div \n                key={'rowAns' + i} \n                className=\"row-sum\" \n                style={rowBooleanArr[i] ? CORRECT : INCORRECT}>\n                  {val}\n              </div>\n            )}\n        </div>\n        <div className=\"col-answer\">\n          {colSumAnswer.map((val,i) => \n            <div \n              key={'colAns'+i} \n              className=\"col-sum\" \n              style={colBooleanArr[i] ? CORRECT : INCORRECT}>\n                {val}\n            </div>\n          )}\n        </div>\n        <div className='button-group'>\n          <button onClick={this.undo} disabled={this.state.history.length === 1}>Undo</button>\n          <button onClick={this.reset}>Reset</button>\n          <button onClick={this.newGame}>New Game</button>\n        </div>\n        {completed &&\n          <Modal>\n            <div className=\"modal-content\">\n              <h1>Congratulations!</h1> \n              <button onClick={this.newGame}>Play Again?</button>\n            </div>\n          </Modal>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}